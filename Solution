    class Solution
    {
        public int solution(int[] A)
        {
            if (A == null)
            {
                throw new NullReferenceException(nameof(A));
            }

            if (A.Length <= 1)
            {
                return 0;
            }

            int result = 0;

            // Определим массивы для хранения начальных и конечных точек окружностей.
            int[] startingPoints = new int[A.Length];
            int[] endingPoints = new int[A.Length];

            // Для каждой точки координатной прямой найдем количество начинающихся и заканчивающихся в ней окружностей.
            for (int i = 0; i < A.Length; i++)
            {
                int startingIndex = i - A[i] > 0 ? i - A[i] : 0;
                int endingIndex = A.Length - 1 - i > A[i] ? i + A[i] : A.Length - 1;

                startingPoints[startingIndex]++;
                endingPoints[endingIndex]++;
            }

            int activeCirclesAmount = 0;

            // Осуществляя проход по координатной прямой и используя данные из цикла выше, мы определяем на каждой точке
            // количество пересечений новых кругов с уже возникшими. 
            for (int i = 0; i < A.Length; i++)
            {
                if (startingPoints[i] > 0)
                {
                    // Пересечения новых кругов между собой. 
                    result += startingPoints[i] * (startingPoints[i] - 1) / 2;

                    // Пересечения новых кругов с уже возникшими.
                    result += activeCirclesAmount * startingPoints[i];

                    if (result > 10000000)
                    {
                        return -1;
                    }

                    activeCirclesAmount += startingPoints[i];
                }

                activeCirclesAmount -= endingPoints[i];
            }

            return result;
        }
    }
